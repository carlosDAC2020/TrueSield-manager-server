import uvicorn
from fastapi import FastAPI, WebSocket
import asyncio
import websockets
import json
import random
import os

# Configurar FastAPI
app = FastAPI()

list_items=[]

# Ruta para retornar un saludo
@app.get("/")
async def index():
    return {"message": "¡Hola, bienvenido a nuestra API!"}

@app.websocket("/contrasting")
async def websocket_endpoint(websocket: WebSocket):
    # se crea una coneccion con un soket desde el manager
    await websocket.accept()
    print("WebSocket connection established")
    try:
        # se reciven las entidades como un mensaje desde el manager
        data = await websocket.receive_text()
        # transforma el mensaje recivido en un diccionario
        message = json.loads(data)
        
        while True:
            """ 
            realiza el proceso de busqueda de los items
            y en lo q vas obteniendo un items con lo vas enviando al manager de la siguiente forma 
            """
            item = {
                "nota":" q sea tal cual como se guardaron en los datos de la demo por item por q ya el manager esta listo para leerlos de esa forma",
                "Type_item":"añade esta clave y valor, los valores por defecto serian (x, reddit o rss) esto dependiendo el tipo de item"
            }
            await websocket.send_text(json.dumps(item))
        
        
    except Exception as e:
        print(f"Connection error: {e}")
    

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8001)



fuerte terremoto deja grandes destrosos en bogota dejando 40 muertos 10 heridos 

row-cols-lg-4